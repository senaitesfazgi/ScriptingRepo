//Changing state options using addOption and removeOption based on the values from impact field 
//Decorating the state field when its newValue is new

function onChange(control, oldValue, newValue, isLoading, isTemplate) {
	if (isLoading || newValue == '') {
		return;
	}
	
	//Document the current value of State, if New, use a decoration
	var incState = g_form.getValue('state');
	jslog("ST -  the value of incState is: " + incState);
	
	if (incState == 1) {
		jslog("ST - line 11 executed");
		g_form.addDecoration('state', 'icon-edit','Gathering initial details');
		g_form.flash('state', "teal", -4);
	}
	
	//Take this action if the new value of Impact is 1 or 2
	if (newValue == 1 || newValue == 2){
			g_form.removeOption('state', 3);  //On Hold
			g_form.removeOption('state', 6);  //Resolved
			g_form.removeOption('state', 7);  //Closed
			g_form.removeOption('state', 8);  //Canceled
			g_form.addInfoMessage("The State options have been removed");
	}
	
	//Take this action if the form is not loading the new value of Impact is NOT 1 or 2
	else if (!isLoading && newValue != 1 && newValue != 2){
			g_form.addOption('state', '1', 'New');
			g_form.addOption('state', '2', 'In Progress');
			g_form.addOption('state', '3', 'On Hold');
			g_form.addOption('state', '6', 'Resolved');
			g_form.addOption('state', '7', 'Closed');
			g_form.addOption('state', '8','Canceled');
			g_form.setValue('state', incState);
	}
}
